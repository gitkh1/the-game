version: "3.9"

services:
  postgres:
    image: postgres:14
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    networks:
      - popstar-network

  mongo:
    image: mongo:latest
    build:
      context: .
      dockerfile: Dockerfile.mongo
    env_file:
      - ./.env
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - ./tmp/mongodata:/data/db
    depends_on:
      - postgres
    networks:
      - popstar-network

  server:
    container_name: server
    image: server
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      HOST: ${HOST}
      MONGO_PORT: ${MONGO_PORT}
      NODE_ENV: production
    depends_on:
      - postgres
      - mongo
    networks:
      - popstar-network
    healthcheck:
      test: ["CMD", "curl", "-f", "postgres:${POSTGRES_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - popstar-network

volumes:
  postgres:
  pgadmin-data:
  mongo:

networks:
  popstar-network:
    driver: bridge
